filetype plugin indent on
syntax enable

let g:EditorConfig_preserve_formatoptions = 1
let g:mapleader             = "\<Space>"
let g:netrw_banner          = 0
let g:netrw_fastbrowse      = 0          " https://github.com/tpope/vim-vinegar/issues/13#issuecomment-489440040
let g:netrw_use_errorwindow = 1          " https://github.com/vim/vim/issues/7828
let g:skip_defaults_vim     = 1

nnoremap <Leader> <NOP>
nnoremap <Leader><Left> :tabprevious<CR>
nnoremap <Leader><Right> :tabnext<CR>
nnoremap <Leader>b :set nomore<Bar>:buffers<Bar>:set more<CR>:buffer<Space>
nnoremap <Leader>e :Explore %:p:h<CR>
nnoremap <Leader>q :bwipeout<Bar>:redraw<CR>
nnoremap <Leader>t <C-o>
nnoremap <S-Tab> :wincmd W<CR>
nnoremap <Tab> :wincmd w<CR>
tnoremap <Esc><Esc> <C-\><C-n>

if has("clipboard")
  set clipboard^=unnamed                 " On mac and Windows, use * register for copy-paste
  if has("unnamedplus")                  " When possible use + register for copy-paste
    set clipboard^=unnamedplus
  endif
endif

set encoding=utf-8 fileformats=unix fileencodings=utf-8,cp1251,koi8-r,cp866
set foldlevel=99 foldmethod=indent       " za to toggle, opens all by default
set hidden
set hlsearch incsearch ignorecase smartcase showmatch
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯЖХЪ;ABCDEFGHIJKLMNOPQRSTUVWXYZ:{},фисвуапршолдьтщзйкыегмцчняхъ;abcdefghijklmnopqrstuvwxyz[]
set laststatus=2 noruler statusline=\%M\%f%=\%l:\%c
set linebreak showbreak=¬
set list listchars=tab:•·,trail:•,nbsp:¤,extends:¦,precedes:¦
set matchtime=1
set mouse= sidescroll=1                  " horizontal scroll by symbol (default half screen)
set nobackup noswapfile nowritebackup
set noeb vb t_vb=                        " https://vim.fandom.com/wiki/Disable_beeping
set notitle nowrap nomodeline
set nowildmenu wildmode=list:longest,full
set shortmess=aI
set splitright splitbelow
set synmaxcol=300 spelllang=
set ttimeout ttimeoutlen=50
set undolevels=8 viminfo=""
silent! colorscheme pencil
silent! set completeopt=menuone,noinsert,noselect

let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_diagnostics_signs_enabled = 0
let g:lsp_diagnostics_virtual_text_enabled = 0
let g:lsp_document_code_action_signs_enabled = 0
let g:lsp_document_highlight_enabled = 0
let g:lsp_fold_enabled = 0

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> <Leader>] <plug>(lsp-definition)
    nmap <buffer> <Leader>[ <plug>(lsp-references)
    nmap <buffer> <Leader>i <plug>(lsp-implementation)
    nmap <buffer> <Leader>k <plug>(lsp-hover)

    let g:lsp_format_sync_timeout = 1000
endfunction

augroup lsp_install
    au!
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
